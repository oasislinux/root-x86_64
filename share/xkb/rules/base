//
//  Rules for resolving XKB components for use with XFree86
//  Copyright 1996 by Joseph Moss
//
//  2002 Modifier: Ivan Pascal      The XFree86 Project
//

// If you want non-latin layouts to implicitly include the en_US layout,
// then uncomment the following lines:
//! $nonlatin = af am ara bd bg bt by eg et ge gn gr id il in ir \
//              jp jv kg kh kr kz la lk ma me mk mm mn mv my \
//              pk rs ru sy th tj tz ua uz

// PC models
! $pcmodels = pc86 pc101 pc102 pc104 pc104alt pc105

// Jolla devices and keyboards
! $jollamodels = jollasbj

// Microsoft models (using MS geometry)
! $msmodels = microsoft microsoft4000 microsoft7000 microsoftpro microsoftprousb microsoftprose microsoftsurface

// Nokia devices and keyboards
! $nokiamodels = nokiasu8w nokiarx44 nokiarx51

// TypeMatrix geometries
! $tmgeometries = tm2020 tm2030PS2 tm2030USB tm2030USB-102 tm2030USB-106

// Layouts that provide further specializations for the OLPC
! $olpclayouts = af am ara br ca es et fr it kh kz in mn np ru th tr us 

! $macbooks = macbook78 macbook79
! $maclaptop = ibook powerbook macbook78 macbook79
! $applealu = applealu_ansi applealu_iso applealu_jis
! $macs = macintosh macintosh_old ibook powerbook macbook78 macbook79

! $macvendorlayouts = ch de dk fi fr gb is it latam nl no pt se us

// The countries that predominantly have AZERTY or QWERTZ layouts:
! $azerty = be fr
! $qwertz = al ch cz de hr hu ro si sk

! $thinkpads = thinkpad thinkpad60 thinkpadz60

! $sun = sun_type6_jp sun_type6_usb sun_type6_euro_usb \
         sun_type6_jp_usb sun_type6_unix_usb sun_type7_jp_usb \
         sun_type7_usb sun_type7_euro_usb sun_type7_unix_usb

! $sun_jp = sun_type6_jp sun_type6_jp_usb sun_type7_jp_usb

// Sun Type_6_7 keyboards with custom layouts
! $sun_custom = ara be br ca ch cz de dk \
                ee es fi fr gb gr it jp \
                kr lt lv nl no pl pt ro \
                ru se sk tr tw ua us

! $sun_var =  sun_type6 sun_type6_suncompat sun_type6_de sun_type6_fr \
              sun_type7 sun_type7_suncompat suncompat

! $sun_compat = sun_type6 sun_type6_suncompat sun_type7_suncompat suncompat

! $inetkbds = acer_c300 acer_ferrari4k acer_laptop \
              airkey apex300 \
              apple armada azonaRF2300 \
              benqx brother \
              btc5113rf btc9000 btc9000a btc9001ah btc5090 btc9019u \
              cherryblue cherrybluea cherryblueb \
              cherrycyboard cherrycmexpert \
              chicony chicony0108 chicony0420 chicony9885 \
              compalfl90 \
              compaqeak8 compaqik7 compaqik13 compaqik18 \
              creativedw7000 \
              cymotionlinux \
              dell dellm65 dellusbmm \
              emachines ennyah_dkb1008 evdev \
              genius geniuscomfy2 \
              gyration honeywell_euroboard \
              hp250x hp5xx hp500fa hpdv5 \
              hpi6 hpxe3gc hpxe3gf hpxe4xxx hpxt1000 hpzt11xx \
              ibm_spacesaver inspiron intel ipaq itouch \
              logiaccess logicda logicink logiclx300 \
              logidinovo logidinovoedge logiex110 \
              logiik logiinkse logiinkseusb logiitc \
              logitech_base logitech_g15 logiultrax \
              microsoft4000 microsoft7000 microsoftinet microsoftmult \
              microsoftoffice microsoftprooem microsoftprose microsoftprousb \
              mx1998 mx2500 mx2750 \
              oretec \
              pc105 ppkb presario propeller \
              qtronix \
              rapidaccess rapidaccess2 \
              samsung4500 samsung4510 \
              silvercrest \
              sk1300 sk2500 sk6200 sk7100 \
              sven sven303 symplon \
              teck227 teck229 thinkpad60 \
              toshiba_s3000 trust trustda \
              unitekkb1925 yahoo

! $inetmediakbds = \
		a4_rfkb23 a4techKB21 a4techKBS8 acer_ferrari4k acer_laptop /
		armada asus_laptop benqx btc5090 btc6301urf btc9019u /
		cherrybluea cherryblueb cherrycyboard chicony042 /
		compalfl90 compaqik13 compaqik18 creativedw7000 /
		cymotionlinux dellm65 dellusbmm dexxa diamond dtk2000 /
		emachines ennyah_dkb1008 fscaa1667g genius geniuscomfy /
		geniuscomfy2 geniuskb19e hp5xx hpdv5 hpi6 hpxe3gc hpxe3gf /
		hpxe4xxx hpxt1000 hpzt11xx inspiron latitude /
		logidinovo logidinovoedge logitech_base logitech_g15 /
		microsoft4000 microsoft7000 microsoftmult microsoftpro /
		microsoftprooem mx1998 mx2500 mx2750 pc105 precision_m /
		presario propeller samsung4500 samsung4510 scorpius /
		silvercrest sk1300 sk2500 sk7100 sp_inet targa_v811 /
		thinkpad thinkpad60 tm2030USB-102 tm2030USB-106 /
		toshiba_s3000 trust trustda trust_slimline unitekkb1925
! model		=	keycodes
  amiga		=	amiga(de)
  ataritt	=	ataritt(de)
  empty		=	empty
 $sun_jp	=	sun(type6_jp_usb)
 $sun		=	sun(type6_usb)
  pc98		=	xfree98(pc98)
 $applealu	=	macintosh(alukbd)
  macintosh_hhk	=	macintosh(hhk)
  macintosh_old	=	macintosh(old)
 $macs		=	macintosh
  thinkpadz60	=	xfree86(thinkpadz60)
  *		=	xfree86
! layout[1]	=	keycodes
  $azerty       =       +aliases(azerty)
  $qwertz       =       +aliases(qwertz)
  *             =       +aliases(qwerty)
! layout	=	keycodes
  $azerty       =       +aliases(azerty)
  $qwertz       =       +aliases(qwertz)
  *             =       +aliases(qwerty)
! option	=	keycodes
! model		layout	=	geometry
  thinkpad	us	=	thinkpad(us)
! model		=	geometry
  microsoftelite	=	microsoft(elite)
 $msmodels	=	microsoft(natural)
  dell101	=	dell(dell101)
  dellm65	=	dell(dellm65)
  latitude	=	dell(latitude)
  flexpro	=	keytronic(FlexPro)
  hp6000	=	hp(omnibook)
  hpmini110	=	hp(mini110)
  hpdv5		=	hp(dv5)
  omnikey101	=	northgate(omnikey101)
  sanwaskbkg3	=	sanwa(sanwaskbkg3)
 $pcmodels	=	pc(%m)
  everex	=	everex(STEPnote)
  thinkpad	=	thinkpad(intl)
  thinkpad60	=	thinkpad(60)
  thinkpadz60	=	thinkpad(60)
  apex300	=	steelseries(apex300)
 $tmgeometries	=	typematrix(%m)
  winbook	=	winbook(XP5)
  pc98		=	nec(pc98)
 $applealu	=	macintosh(%m)
 $macbooks      =       macintosh(%m)
 $macs		=	macintosh(macintosh)
  hhk		=	hhk(basic)
  kinesis	=	kinesis(model100)
 $nokiamodels	=	nokia(%m)
  sun_type6_jp          =   sun(type6jp)
  sun_type6_usb         =   sun(type6)
  sun_type6_euro_usb    =   sun(type6tuv)
  sun_type6_jp_usb      =   sun(type6jp)
  sun_type6_unix_usb    =   sun(type6unix)
  sun_type7_jp_usb      =   sun(type6jp)
  sun_type7_usb         =   sun(type7)
  sun_type7_euro_usb    =   sun(type7tuv)
  sun_type7_unix_usb    =   sun(type7unix)
  *		=       pc(pc104)
! model		layout		variant		=	symbols
  classmate	us		intl		=	pc+us(classmate-intl)
  classmate	us		alt-intl	=	pc+us(classmate-alt-intl)
  classmate	us		altgr-intl	=	pc+us(classmate-altgr-intl)
  nokiarx51	cz		qwerty		=	nokia_vndr/rx-51(cz_qwerty)
  *		$sun_custom	$sun_var	=	pc+sun_vndr/%l%(v)
! model		layout			=	symbols
  ataritt	$nonlatin		=	xfree68_vndr/ataritt(us)+%l%(v):2
  ataritt	*			=	xfree68_vndr/ataritt(us)+%l%(v)
  amiga		$nonlatin		=	xfree68_vndr/amiga(usa1)+%l%(v):2
  amiga		*			=	xfree68_vndr/amiga(usa1)+%l%(v)
  classmate	us			=	pc+%l(classmate)
  empty		*			=	empty(basic)
  *		empty			=	empty(basic)
  jollasbj	$nonlatin		=	jolla_vndr/sbj(common)+us+%l%(v):2
  jollasbj	*			=	jolla_vndr/sbj(common)+%l%(v)
 $sun		$sun_custom		=	pc+sun_vndr/%l%(v)
  pc98		nec_vndr/jp		=	nec_vndr/jp(pc98)
  macintosh_old	us			=	macintosh_vndr/us(oldmac)
  macintosh_old	en_US			=	macintosh_vndr/us(oldmac)
  macintosh_old	$macvendorlayouts	=	macintosh_vndr/us(oldmac)+macintosh_vndr/%l%(v)
  macintosh_old	$nonlatin		=	macintosh_vndr/us(oldmac)+%l%(v):2
  macintosh_old	*			=	macintosh_vndr/us(oldmac)+%l%(v)
  applealu_jis	jp			=	macintosh_vndr/apple(alukbd)+macintosh_vndr/jp(usmac)+macintosh_vndr/jp(mac):2
  applealu_jis	*			=	macintosh_vndr/apple(alukbd)+%l%(v)+macintosh_vndr/jp(mac):2
 $applealu	$macvendorlayouts	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l%(v)
 $applealu	*			=	macintosh_vndr/apple(alukbd)+%l%(v)
 $macs		en_US			=	pc+macintosh_vndr/us(extended)
 $macs		$macvendorlayouts	=	pc+macintosh_vndr/%l%(v)
  nokiarx44	*			=	nokia_vndr/rx-44(%l)
  nokiarx51	cz(qwerty)		=	nokia_vndr/rx-51(common)+nokia_vndr/rx-51(cz_qwerty)
  nokiarx51	*			=	nokia_vndr/rx-51(common)+nokia_vndr/rx-51(%l%_v)
  nokiasu8w	*			=	nokia_vndr/su-8w(%l)
  olpc		$olpclayouts		=	olpc+%l%(m)
  olpc		*			=	olpc+%l%(v)
  olpcm		$olpclayouts		=	olpc+%l%(m)
  olpcm		*			=	olpc+%l%(v)
 $thinkpads	br			=	pc+br(thinkpad)
  sl-c3x00	*			=	pc+sharp_vndr/sl-c3x00(basic)
  ws003sh	*			=	pc+sharp_vndr/ws003sh(basic)
  ws007sh	*			=	pc+sharp_vndr/ws007sh(basic)
  ws011sh	*			=	pc+sharp_vndr/ws011sh(basic)
  ws020sh	*			=	pc+sharp_vndr/ws020sh(basic)
  *		$nonlatin		=	pc+us+%l%(v):2
  *		*			=	pc+%l%(v)
! model		layout[1]		=	symbols
  ataritt	*			=	xfree68_vndr/ataritt(us)+%l[1]%(v[1])
  amiga		*			=	xfree68_vndr/amiga(usa1)+%l[1]%(v[1])
  jollasbj	*			=	jolla_vndr/sbj(common)+%l[1]%(v[1])
 $sun		$sun_custom		=	pc+sun_vndr/%l[1]%(v[1])
  macintosh_old	us			=	macintosh_vndr/us(oldmac)
  macintosh_old	$macvendorlayouts	=	macintosh_vndr/us(oldmac)+macintosh_vndr/%l[1]%(v[1])
  macintosh_old	*			=	macintosh_vndr/us(oldmac)+%l[1]%(v[1])
  applealu_jis	us			=	macintosh_vndr/apple(alukbd)+macintosh_vndr/jp(usmac)
 $applealu	$macvendorlayouts	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l[1]%(v[1])
 $applealu	*			=	macintosh_vndr/apple(alukbd)+%l[1]%(v[1])
 $macs		$macvendorlayouts	=	pc+macintosh_vndr/%l[1]%(v[1])
  nokiarx51	cz(qwerty)		=	nokia_vndr/rx-51(common)+nokia_vndr/rx-51(cz_qwerty)
  nokiarx51	*			=	nokia_vndr/rx-51(common)+nokia_vndr/rx-51(%l[1]%_v[1])
 $thinkpads	br			=	pc+%l[1](thinkpad)
  *		*			=	pc+%l[1]%(v[1])
! model		layout[2]	=	symbols
  nokiarx51	cz(qwerty)	=	+nokia_vndr/rx-51(cz_qwerty):2
  nokiarx51	*		=	+nokia_vndr/rx-51(%l[2]%_v[2]):2
 $sun		$sun_custom	=	+sun_vndr/%l[2]%(v[2]):2
  *		*		=	+%l[2]%(v[2]):2
! model		layout[3]	=	symbols
  nokiarx51	cz(qwerty)	=	+nokia_vndr/rx-51(cz_qwerty):3
  nokiarx51	*		=	+nokia_vndr/rx-51(%l[3]%_v[3]):3
 $sun		$sun_custom	=	+sun_vndr/%l[3]%(v[3]):3
  *		*		=	+%l[3]%(v[3]):3
! model		layout[4]	=	symbols
  nokiarx51	cz(qwerty)	=	+nokia_vndr/rx-51(cz_qwerty):4
  nokiarx51	*		=	+nokia_vndr/rx-51(%l[4]%_v[4]):4
 $sun		$sun_custom	=	+sun_vndr/%l[4]%(v[4]):4
  *		*		=	+%l[4]%(v[4]):4
! model		=	symbols
  a4techKB21    =       +inet(media_nav_common)
  a4techKBS8    =       +inet(media_nav_acpi_common)
  a4_rfkb23     =       +inet(media_nav_acpi_common)
  asus_laptop   =       +inet(media_common)
  acer_tm_800   =       +inet(acer_laptop)
  benqx730      =       +inet(benqx)
  benqx800      =       +inet(benqx)
  btc5126t      =       +inet(nav_acpi_common)
  btc9116u      =       +inet(btc9019u)
  btc6301urf    =       +inet(media_nav_acpi_common)
  chromebook    =       +inet(chromebook)
  dellsk8125    =       +inet(dell)
  dellsk8135    =       +inet(dell)
  cherrybunlim  =       +inet(nav_common)
  dexxa         =       +inet(media_nav_common)
  dtk2000       =       +inet(media_nav_acpi_common)
  fscaa1667g    =       +inet(media_nav_common)
  geniuskb19e   =       +inet(media_nav_acpi_common)
  geniuscomfy   =       +inet(media_nav_acpi_common)
  geniuskkb2050hs =     +inet(dellusbmm)
  hpnx9020      =       +inet(hpi6)
  latitude      =       +inet(media_common)
  logicd        =       +inet(logitech_base)
  logicd_it     =       +inet(logitech_base)
  logicd_nav    =       +inet(logitech_base)
  logicd_opt    =       +inet(logitech_base)
  logiultrax    =       +inet(logitech_base)
  logiclx300    =       +inet(logiex110)
  logii350      =       +inet(logiex110)
  logimel       =       +inet(logiex110)
  logicdit      =       +inet(logicd)
  logicdo       =       +inet(logicd)
  logicdp       =       +inet(logicd)
  logicdpa      =       +inet(logicda)
  logiciink     =       +inet(logicink)
  ltcd          =       +inet(logicda)
  microsoftccurve2k =   +inet(microsoftprooem)
  microsoftpro  =       +inet(media_nav_acpi_common)
  precision_m   =       +inet(media_nav_common)
  scorpius      =       +inet(media_nav_acpi_common)
  sp_inet       =       +inet(media_nav_acpi_common)
  targa_v811    =       +inet(media_nav_acpi_common)
  thinkpad      =       +inet(media_nav_common)
  thinkpadz60   =       +inet(thinkpad60)
  tm2030USB-102 =       +inet(media_nav_acpi_common)
  tm2030USB-106 =       +inet(media_nav_acpi_common)
  trust_slimline =      +inet(media_nav_acpi_common)
  vsonku306     =       +inet(microsoftprooem)
  $inetkbds     =       +inet(%m)
  $maclaptop    =       +inet(apple)+level3(enter_switch)
  $applealu     =       +inet(apple)
  $macs	        =       +inet(apple)
  sun_type7_jp_usb	=	+sun_vndr/solaris(defaults_type7jp)
  $sun			=		+sun_vndr/solaris(defaults)
! model		layout		=	symbols
 $inetmediakbds	jp		=	+jp(henkan)
! model		layout		=	compat
  pc98		nec_vndr/jp	=	pc98(basic)
  *		jp		=	complete+japan
  olpc          *               =       olpc
  olpcm         *               =       olpc
  *		*		=	complete
! model		layout[1]	=	compat
  *		*		=	complete
! model		=	types
  $macs		=	complete+numpad(mac)
  $applealu	=	complete+numpad(mac)
  $nokiamodels	=	complete+nokia
  *		=	complete
! layout		option			= symbols
  *			grp:toggle		= +group(toggle)
  *			grp:alts_toggle		= +group(alts_toggle)
  *			grp:alt_altgr_toggle	= +group(alt_altgr_toggle)
  *			grp:win_space_toggle	= +group(win_space_toggle)
  *			grp:ctrl_space_toggle	= +group(ctrl_space_toggle)
  *			grp:rctrl_rshift_toggle	= +group(rctrl_rshift_toggle)
  *			lv3:ralt_alt		= +level3(ralt_alt)
  *			misc:typo		= +typo(base)
  *			misc:apl		= +apl(level3)
! layout[1]		option			= symbols
  *			grp:toggle		= +group(toggle):1
  *			grp:alts_toggle		= +group(alts_toggle):1
  *			grp:alt_altgr_toggle	= +group(alt_altgr_toggle):1
  *			grp:win_space_toggle	= +group(win_space_toggle):1
  *			grp:ctrl_space_toggle	= +group(ctrl_space_toggle):1
  *			grp:rctrl_rshift_toggle	= +group(rctrl_rshift_toggle):1
  *			lv3:ralt_alt		= +level3(ralt_alt):1
  *			misc:typo		= +typo(base):1
  *			misc:apl		= +apl(level3):1
! layout[2]		option			= symbols
  *			grp:toggle		= +group(toggle):2
  *			grp:alts_toggle		= +group(alts_toggle):2
  *			grp:alt_altgr_toggle	= +group(alt_altgr_toggle):2
  *			grp:win_space_toggle	= +group(win_space_toggle):2
  *			grp:ctrl_space_toggle	= +group(ctrl_space_toggle):2
  *			grp:rctrl_rshift_toggle	= +group(rctrl_rshift_toggle):2
  *			lv3:ralt_alt		= +level3(ralt_alt):2
  *			misc:typo		= +typo(base):2
  *			misc:apl		= +apl(level3):2
! layout[3]		option			= symbols
  *			grp:toggle		= +group(toggle):3
  *			grp:alts_toggle		= +group(alts_toggle):3
  *			grp:alt_altgr_toggle	= +group(alt_altgr_toggle):3
  *			grp:win_space_toggle	= +group(win_space_toggle):3
  *			grp:ctrl_space_toggle	= +group(ctrl_space_toggle):3
  *			grp:rctrl_rshift_toggle	= +group(rctrl_rshift_toggle):3
  *			lv3:ralt_alt		= +level3(ralt_alt):3
  *			misc:typo		= +typo(base):3
  *			misc:apl		= +apl(level3):3
! layout[4]		option			= symbols
  *			grp:toggle		= +group(toggle):4
  *			grp:alts_toggle		= +group(alts_toggle):4
  *			grp:alt_altgr_toggle	= +group(alt_altgr_toggle):4
  *			grp:win_space_toggle	= +group(win_space_toggle):4
  *			grp:ctrl_space_toggle	= +group(ctrl_space_toggle):4
  *			grp:rctrl_rshift_toggle	= +group(rctrl_rshift_toggle):4
  *			lv3:ralt_alt		= +level3(ralt_alt):4
  *			misc:typo		= +typo(base):4
  *			misc:apl		= +apl(level3):4
! option		=	symbols
  altwin:menu		=	+altwin(menu)
  altwin:menu_win	=	+altwin(menu_win)
  altwin:meta_alt	=	+altwin(meta_alt)
  altwin:alt_win	=	+altwin(alt_win)
  altwin:ctrl_win	=	+altwin(ctrl_win)
  altwin:ctrl_rwin	=	+altwin(ctrl_rwin)
  altwin:ctrl_alt_win	=	+altwin(ctrl_alt_win)
  altwin:meta_win	=	+altwin(meta_win)
  altwin:left_meta_win	=	+altwin(left_meta_win)
  altwin:hyper_win	=	+altwin(hyper_win)
  altwin:alt_super_win	=	+altwin(alt_super_win)
  altwin:swap_lalt_lwin	=	+altwin(swap_lalt_lwin)
  altwin:swap_alt_win	=	+altwin(swap_alt_win)
  altwin:prtsc_rwin	=	+altwin(prtsc_rwin)
  grab:debug		=	+srvr_ctrl(grab_debug)
  grp:switch		=	+group(switch)
  grp:lswitch		=	+group(lswitch)
  grp:win_switch	=	+group(win_switch)
  grp:lwin_switch	=	+group(lwin_switch)
  grp:rwin_switch	=	+group(rwin_switch)
  grp:menu_switch	=	+group(menu_switch)
  grp:shifts_toggle	=	+group(shifts_toggle)
  grp:ctrls_toggle	=	+group(ctrls_toggle)
  grp:caps_toggle	=	+capslock(grouplock)
  grp:caps_switch	=	+capslock(groupshift)
  grp:shift_caps_toggle	=	+group(shift_caps_toggle)
  grp:shift_caps_switch	=	+group(shift_caps_switch)
  grp:win_menu_switch	=	+group(win_menu_switch)
  grp:alt_caps_toggle	=	+group(alt_caps_toggle)
  grp:alt_space_toggle	=	+group(alt_space_toggle)
  grp:menu_toggle	=	+group(menu_toggle)
  grp:lwin_toggle	=	+group(lwin_toggle)
  grp:rwin_toggle	=	+group(rwin_toggle)
  grp:lshift_toggle	=	+group(lshift_toggle)
  grp:rshift_toggle	=	+group(rshift_toggle)
  grp:rctrl_switch	=	+group(rctrl_switch)
  grp:lctrl_toggle	=	+group(lctrl_toggle)
  grp:rctrl_toggle	=	+group(rctrl_toggle)
  grp:lalt_toggle	=	+group(lalt_toggle)
  grp:sclk_toggle	=	+group(sclk_toggle)
  grp:lctrl_rctrl_switch	=	+group(lctrl_rctrl_switch)
  grp:lctrl_lwin_rctrl_menu	=	+group(lctrl_lwin_rctrl_menu)
  grp:lctrl_lalt_toggle		=	+group(lctrl_lalt_toggle)
  grp:rctrl_ralt_toggle		=	+group(rctrl_ralt_toggle)
  grp:ctrl_alt_toggle		=	+group(ctrl_alt_toggle)
  grp:ctrl_alt_toggle_bidir	=	+group(ctrl_alt_toggle_bidir)
  grp:lctrl_lshift_toggle	=	+group(lctrl_lshift_toggle)
  grp:ctrl_shift_toggle		=	+group(ctrl_shift_toggle)
  grp:ctrl_shift_toggle_bidir	=	+group(ctrl_shift_toggle_bidir)
  grp:lalt_lshift_toggle	=	+group(lalt_lshift_toggle)
  grp:ralt_rshift_toggle	=	+group(ralt_rshift_toggle)
  grp:alt_shift_toggle		=	+group(alt_shift_toggle)
  grp:alt_shift_toggle_bidir	=	+group(alt_shift_toggle_bidir)
  grp:lctrl_lwin_toggle		=	+group(lctrl_lwin_toggle)
  lv3:switch		=	+level3(switch)
  lv3:ralt_switch	=	+level3(ralt_switch)
  lv3:ralt_switch_multikey	=	+level3(ralt_switch_multikey)
  lv3:lalt_switch	=	+level3(lalt_switch)
  lv3:alt_switch	=	+level3(alt_switch)
  lv3:menu_switch	=	+level3(menu_switch)
  lv3:win_switch	=	+level3(win_switch)
  lv3:lwin_switch	=	+level3(lwin_switch)
  lv3:rwin_switch	=	+level3(rwin_switch)
  lv3:enter_switch	=	+level3(enter_switch)
  lv3:4_switch_isolated	=	+level3(4_switch_isolated)
  lv3:9_switch_isolated	=	+level3(9_switch_isolated)
  caps:capslock		=	+capslock(capslock)
  caps:numlock		=	+capslock(numlock)
  caps:shiftlock	=	+capslock(shiftlock)
  caps:swapescape	=	+capslock(swapescape)
  caps:escape		=	+capslock(escape)
  caps:escape_shifted_capslock	=	+capslock(escape_shifted_capslock)
  caps:escape_shifted_compose	=	+capslock(escape_shifted_compose)
  caps:backspace	=	+capslock(backspace)
  caps:super		=	+capslock(super)
  caps:hyper		=	+capslock(hyper)
  caps:menu		=	+capslock(menu)
  caps:none		=	+capslock(none)
  caps:ctrl_modifier	=	+capslock(ctrl_modifier)
  ctrl:nocaps		=	+ctrl(nocaps)
  ctrl:lctrl_meta	=	+ctrl(lctrl_meta)
  ctrl:swapcaps		=	+ctrl(swapcaps)
  ctrl:swapcaps_hyper	=	+ctrl(swapcaps_hyper)
  ctrl:swapcaps_and_switch_layout	=	+ctrl(swapcaps_and_switch_layout)
  ctrl:ac_ctrl		=	+ctrl(ac_ctrl)
  ctrl:aa_ctrl		=	+ctrl(aa_ctrl)
  ctrl:rctrl_ralt	=	+ctrl(rctrl_ralt)
  ctrl:menu_rctrl	=	+ctrl(menu_rctrl)
  ctrl:ralt_rctrl	=	+ctrl(ralt_rctrl)
  ctrl:swap_lalt_lctl	=	+ctrl(swap_lalt_lctl)
  ctrl:swap_lwin_lctl	=	+ctrl(swap_lwin_lctl)
  ctrl:swap_rwin_rctl	=	+ctrl(swap_rwin_rctl)
  ctrl:swap_lalt_lctl_lwin  =	+ctrl(swap_lalt_lctl_lwin)
  compose:ralt		=	+compose(ralt)
  compose:lwin		=	+compose(lwin)
  compose:lwin-altgr	=	+compose(lwin-altgr)
  compose:rwin		=	+compose(rwin)
  compose:rwin-altgr	=	+compose(rwin-altgr)
  compose:menu		=	+compose(menu)
  compose:menu-altgr	=	+compose(menu-altgr)
  compose:lctrl		=	+compose(lctrl)
  compose:lctrl-altgr	=	+compose(lctrl-altgr)
  compose:rctrl		=	+compose(rctrl)
  compose:rctrl-altgr	=	+compose(rctrl-altgr)
  compose:caps		=	+compose(caps)
  compose:caps-altgr	=	+compose(caps-altgr)
  compose:102		=	+compose(102)
  compose:102-altgr	=	+compose(102-altgr)
  compose:paus		=	+compose(paus)
  compose:prsc		=	+compose(prsc)
  compose:sclk		=	+compose(sclk)
  srvrkeys:none		=	+srvr_ctrl(no_srvr_keys)
  eurosign:e		=	+eurosign(e)
  eurosign:2		=	+eurosign(2)
  eurosign:4		=	+eurosign(4)
  eurosign:5		=	+eurosign(5)
  rupeesign:4		=	+rupeesign(4)
  keypad:oss		=	+keypad(oss)
  keypad:legacy         =	+keypad(legacy)
  keypad:legacy_wang    =	+keypad(legacy_wang)
  keypad:oss_wang       =	+keypad(oss_wang)
  keypad:future         =	+keypad(future)
  keypad:future_wang    =	+keypad(future_wang)
  keypad:hex            =	+keypad(ops)+keypad(hex)
  keypad:atm            =	+keypad(ops)+keypad(hex)+keypad(atm)
  nbsp:none             =	+nbsp(none)
  nbsp:level2           =	+nbsp(level2)
  nbsp:level3           =	+nbsp(level3)
  nbsp:level3s          =	+nbsp(level3s)
  nbsp:level3n          =	+nbsp(level3n)
  nbsp:level4           =	+nbsp(level4)
  nbsp:level4n          =	+nbsp(level4n)
  nbsp:level4nl         =	+nbsp(level4nl)
  nbsp:zwnj2            =	+nbsp(zwnj2)
  nbsp:zwnj2zwj3        =	+nbsp(zwnj2zwj3)
  nbsp:zwnj2zwj3nb4     =	+nbsp(zwnj2zwj3nb4)
  nbsp:zwnj2nb3         =	+nbsp(zwnj2nb3)
  nbsp:zwnj2nb3s        =	+nbsp(zwnj2nb3s)
  nbsp:zwnj2nb3zwj4     =	+nbsp(zwnj2nb3zwj4)
  nbsp:zwnj2nb3nnb4     =	+nbsp(zwnj2nb3nnb4)
  nbsp:zwnj3zwj4        =	+nbsp(zwnj3zwj4)
  japan:nicola_f_bs     =	+jp(nicola_f_bs)
  japan:hztg_escape     =	+jp(hztg_escape)
  korean:ralt_hangul	=	+kr(ralt_hangul)
  korean:rctrl_hangul	=	+kr(rctrl_hangul)
  korean:ralt_hanja	=	+kr(ralt_hanja)
  korean:rctrl_hanja	=	+kr(rctrl_hanja)
  kpdl:dot              =	+kpdl(dot)
  kpdl:comma            =	+kpdl(comma)
  kpdl:dotoss           =	+kpdl(dotoss)
  kpdl:dotoss_latin9    =	+kpdl(dotoss_latin9)
  kpdl:commaoss         =	+kpdl(commaoss)
  kpdl:momayyezoss      =	+kpdl(momayyezoss)
  kpdl:kposs            =	+kpdl(kposs)
  kpdl:semi             =	+kpdl(semi)
  shift:breaks_caps     =	+shift(breaks_caps)
  esperanto:qwerty      =	+epo(qwerty)
  esperanto:dvorak      =	+epo(dvorak)
  esperanto:colemak     =	+epo(colemak)
  terminate:ctrl_alt_bksp =	+terminate(ctrl_alt_bksp)
  keypad:pointerkeys	=	+keypad(pointerkeys)
  apple:alupckeys	=	+macintosh_vndr/apple(alupckeys)
  shift:both_capslock                =       +shift(both_capslock)
  shift:lshift_both_capslock         =       +shift(lshift_both_capslock)
  shift:rshift_both_capslock         =       +shift(rshift_both_capslock)
  shift:both_capslock_cancel         =       +shift(both_capslock_cancel)
  shift:lshift_both_capslock_cancel  =       +shift(lshift_both_capslock_cancel)
  shift:rshift_both_capslock_cancel  =       +shift(rshift_both_capslock_cancel)
  shift:both_shiftlock               =       +shift(both_shiftlock)
  shift:lshift_both_shiftlock        =       +shift(lshift_both_shiftlock)
  shift:rshift_both_shiftlock        =       +shift(rshift_both_shiftlock)
  solaris:sun_compat				 =		 +sun_vndr/solaris(sun_compat)
  lv2:lsgt_switch                    =       +level2(lsgt_switch)
  lv3:caps_switch                    =       +level3(caps_switch)
  lv3:bksl_switch                    =       +level3(bksl_switch)
  lv3:lsgt_switch                    =       +level3(lsgt_switch)
  lv3:caps_switch_latch              =       +level3(caps_switch_latch)
  lv3:bksl_switch_latch              =       +level3(bksl_switch_latch)
  lv3:lsgt_switch_latch              =       +level3(lsgt_switch_latch)
  lv5:caps_switch                 =       +level5(caps_switch)
  lv5:lsgt_switch                 =       +level5(lsgt_switch)
  lv5:ralt_switch                 =       +level5(ralt_switch)
  lv5:menu_switch                 =       +level5(menu_switch)
  lv5:rctrl_switch                =       +level5(rctrl_switch)
  lv5:lsgt_switch_lock            =       +level5(lsgt_switch_lock)
  lv5:ralt_switch_lock            =       +level5(ralt_switch_lock)
  lv5:lwin_switch_lock            =       +level5(lwin_switch_lock)
  lv5:rwin_switch_lock            =       +level5(rwin_switch_lock)
  lv5:lsgt_switch_lock_cancel     =       +level5(lsgt_switch_lock_cancel)
  lv5:ralt_switch_lock_cancel     =       +level5(ralt_switch_lock_cancel)
  lv5:lwin_switch_lock_cancel     =       +level5(lwin_switch_lock_cancel)
  lv5:rwin_switch_lock_cancel     =       +level5(rwin_switch_lock_cancel)
  parens:swap_brackets   =   +parens(swap_brackets)

! option		=	compat
  grp_led:num		=	+lednum(group_lock)
  grp_led:caps		=	+ledcaps(group_lock)
  grp_led:scroll	=	+ledscroll(group_lock)
  mod_led:compose	=	+ledcompose(compose)
  japan:kana_lock	=	+japan(kana_lock)
  caps:shiftlock	=	+ledcaps(shift_lock)
  grab:break_actions	=	+xfree86(grab_break)

! option			=	types
  caps:internal			=	+caps(internal)
  caps:internal_nocancel	=	+caps(internal_nocancel)
  caps:shift			=	+caps(shift)
  caps:shift_nocancel		=	+caps(shift_nocancel)
  numpad:pc			=	+numpad(pc)
  numpad:mac			=	+numpad(mac)
  numpad:microsoft		=	+numpad(microsoft)
  numpad:shift3			=	+numpad(shift3)
